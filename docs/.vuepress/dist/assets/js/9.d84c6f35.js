(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{388:function(t,s,a){"use strict";a.r(s);var e=a(51),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"intersectionobserver-api-使用教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intersectionobserver-api-使用教程"}},[t._v("#")]),t._v(" IntersectionObserver API 使用教程")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("用途")]),t._v(" "),a("p",[t._v('网页开发时，常常需要了解某个元素是否进入了"视口"（viewport），即用户能不能看到它。')])]),t._v(" "),a("h3",{attrs:{id:"简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单使用"}},[t._v("#")]),t._v(" 简单使用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" io "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntersectionObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始观察")]),t._v("\nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 停止观察")]),t._v("\nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unobserve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭观察器")]),t._v("\nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("disconnect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("查看详情 "),a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("IntersectionObserver"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"git-git-流水线技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-git-流水线技巧"}},[t._v("#")]),t._v(" GIT git 流水线技巧")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("git stash   （将自己分支修改的内容暂存起来）\ngit checkout "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("分支名")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("一般切换到主分支"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngit pull origin "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("分支名")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("一般拉取最新的主分支代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngit checkout 自己分支名    （再切换到自己分支）\ngit merge 主分支名      （将主分支合并到自己分支，有冲突解决冲突）\ngit stash "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("将自己改的暂存的内容放出来"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("有冲突解决冲突"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngit add "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("缓存代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngit commit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'修改说明'")]),t._v("   （修改记录日志）\ngit push origin 自己分支名  （将自己分支提交到git仓库）\ngit merge –abort 可以停止合并\ngit log 查看历史提交\n\ngit branch 创建新分支\n没有参数时 git branch 会列出你在本地的分支\n我们也可以使用 git checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("branchname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 命令来创建新分支并立即切换到该分支下，从而在该分支中操作。\n\n删除分支命令：\ngit branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("branchname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"git-如何退出-vim-编辑器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-如何退出-vim-编辑器"}},[t._v("#")]),t._v(" git 如何退出 VIM 编辑器")]),t._v(" "),a("p",[t._v("按下 esc")]),t._v(" "),a("p",[t._v("接着 q! 回车 :表示不保存退出")]),t._v(" "),a("p",[t._v("或 wq! 回车 表示保存并退出")]),t._v(" "),a("p",[t._v("git log 按 q 退出")]),t._v(" "),a("h2",{attrs:{id:"github-创建个人访问令牌"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-创建个人访问令牌"}},[t._v("#")]),t._v(" github 创建个人访问令牌")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("介绍")]),t._v(" "),a("p",[t._v("github 已不再支持密码做验证登录 需要自己创建个人访问令牌做权限管理和分配")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("令牌一定要记得复制保存 处于安全考虑 当你退出当前令牌生成页面之后你将看不到令牌代码")])]),t._v(" "),a("ol",[a("li",[t._v("点击个人中心头像 选择 Developer settings（开发人员设置）")]),t._v(" "),a("li",[t._v("选择 Personal access tokens （个人访问令牌）")]),t._v(" "),a("li",[t._v("点击 Generate new tokne （设置新的访问令牌）")]),t._v(" "),a("li",[t._v("选择权限分配完成之后点击 Generate tokne（生成令牌）")]),t._v(" "),a("li",[t._v("拿到令牌 复制保存")]),t._v(" "),a("li",[t._v("使用令牌 正常连接 github 会给你调起登录框 密码框中不在输入密码输入令牌即可")])]),t._v(" "),a("h2",{attrs:{id:"es6-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-n"}},[t._v("#")]),t._v(" ES6-N")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("介绍")]),t._v(" "),a("p",[t._v("介绍 ES6-ES13 中的新增特性")])]),t._v(" "),a("h4",{attrs:{id:"ecmascript-2022-es13-提案阶段-更倾向于面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-2022-es13-提案阶段-更倾向于面向对象"}},[t._v("#")]),t._v(" ECMAScript 2022(ES13)提案阶段，更倾向于面向对象")]),t._v(" "),a("ol",[a("li",[t._v("声明类的字段：类字段可以在类的顶层被定义和初始化")]),t._v(" "),a("li",[t._v("私有方法&字段：用#前缀来定义类的私有方法和字段")]),t._v(" "),a("li",[t._v("类的静态公共方法和字段：增加了静态公共字段、静态私有方法和静态私有字段的特性")]),t._v(" "),a("li",[t._v("ECMScript 类静态初始化块：在类声明/定义期间评估静态初始化代码块，可以访问类的私有字段")]),t._v(" "),a("li",[t._v("检测私有字段：可以使用 in 操作符，如果指定的属性/字段在指定的对象/类中，则返回真，并且也能判断私有字段")]),t._v(" "),a("li",[t._v("正则匹配索引：该提案提供了一个新的/dflag，以获得关于输入字符串中每个匹配的开始和索引位置结束的额外信息")]),t._v(" "),a("li",[t._v("在所有内置的可索引数据上新增.at()方法")]),t._v(" "),a("li",[t._v("Object.hasOwn(object, property)：使用 Object.hasOwn 替代 Object.prototype.hasOwnProperty.call")]),t._v(" "),a("li",[t._v("Error Cause：为了便捷的传递导致错误的原因")])]),t._v(" "),a("h4",{attrs:{id:"ecmascript-2021-es12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-2021-es12"}},[t._v("#")]),t._v(" ECMAScript 2021 (ES12)")]),t._v(" "),a("ol",[a("li",[t._v("String.prototype.replaceAll ：有了这个 API，替换字符不用写正则了")]),t._v(" "),a("li",[t._v("Promise.any() ：返回第一个 fullfilled 的 promise ，若全部 reject，则返回一个带有失败原因的 AggregateError。")]),t._v(" "),a("li",[t._v("新增逻辑赋值操作符： ??=、&&=、 ||=")]),t._v(" "),a("li",[t._v("WeakRefs：使用弱引用对象，该弱引用不会阻止 GC，并且可以在 GC 前使用 WeakRef.prototype.deref ( ) 解除该引用。")]),t._v(" "),a("li",[t._v("下划线 (_) 分隔符：使用 _ 分隔数字字面量以方便阅读")]),t._v(" "),a("li",[t._v("Intl.ListFormat ：用来处理和多语言相关的对象格式化操作")]),t._v(" "),a("li",[t._v("Intl.DateTimeFormat API 中的 dateStyle 和 timeStyle 的配置项：用来处理多语言下的时间日期格式化的函数")])]),t._v(" "),a("h4",{attrs:{id:"ecmascript-2019-es11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-2019-es11"}},[t._v("#")]),t._v(" ECMAScript 2019(ES11)")]),t._v(" "),a("ol",[a("li",[t._v("动态 import ()：按需导入")]),t._v(" "),a("li",[t._v("空值合并运算符：表达式在 ?? 的左侧 运算符求值为 undefined 或 null，返回其右侧")]),t._v(" "),a("li",[t._v("可选链接：?.用户检测不确定的中间节点")]),t._v(" "),a("li",[t._v("BigInt：新基本数据类型，表示任意精度的整数")]),t._v(" "),a("li",[t._v("globalThis：浏览器：window、worker：self、node：global")]),t._v(" "),a("li",[t._v("Promise.allSettled：返回一个在所有给定的 promise 已被决议或被拒绝后决议的 promise，并带有一个对象数组，每个对象表示对应的 promise 结果")]),t._v(" "),a("li",[t._v("for-in 结构：用于规范 for-in 语句的遍历顺序")])]),t._v(" "),a("h4",{attrs:{id:"ecmascript-2019-es10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-2019-es10"}},[t._v("#")]),t._v(" ECMAScript 2019(ES10)")]),t._v(" "),a("ol",[a("li",[t._v("Array.flat()和 Array.flatMap()：数组展平")]),t._v(" "),a("li",[t._v("String.trimStart()和 String.trimEnd()：去掉开头结尾空格文本")]),t._v(" "),a("li",[t._v("String.prototype.matchAll：为所有匹配的匹配对象返回一个迭代器")]),t._v(" "),a("li",[t._v("Symbol.prototype.description：只读属性，回 Symbol 对象的可选描述的字符串")]),t._v(" "),a("li",[t._v("Object.fromEntries()：返回一个给定对象自身可枚举属性的键值对数组")]),t._v(" "),a("li",[t._v("可选 Catch")]),t._v(" "),a("li",[t._v("SON Superset 超集")]),t._v(" "),a("li",[t._v("JSON.stringify() 加强格式转化")]),t._v(" "),a("li",[t._v("Array.prototype.sort() 更加稳定")]),t._v(" "),a("li",[t._v("Function.prototype.toString() 重新修订")])]),t._v(" "),a("h4",{attrs:{id:"ecmascript-2018-es9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-2018-es9"}},[t._v("#")]),t._v(" ECMAScript 2018(ES9)")]),t._v(" "),a("ol",[a("li",[t._v("异步迭代：await 可以和 for...of 循环一起使用，以串行的方式运行异步操作")]),t._v(" "),a("li",[t._v("Promise.finally()：逻辑只可以放在一个地方，这有点像以前 jQuery ajax 的 complete")]),t._v(" "),a("li",[t._v("Rest/Spread 属性：允许我们将一个剩余参数表示为一个数组正则表达式命名捕获组：允许命名捕获组使用符号?< name >")]),t._v(" "),a("li",[t._v("正则表达式反向断言(lookbehind)")]),t._v(" "),a("li",[t._v("正则表达式 dotAll 模式：正则表达式中点.匹配除回车外的任何单字符，标记 s 改变这种行为，允许行终止符的出现")]),t._v(" "),a("li",[t._v("正则表达式 Unicode 转义: Unicode 属性转义形式为\\p{...}和\\P{...}")])]),t._v(" "),a("h4",{attrs:{id:"ecmascript-2017-es8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-2017-es8"}},[t._v("#")]),t._v(" ECMAScript 2017(ES8)")]),t._v(" "),a("ol",[a("li",[t._v("async/await: 异步终极解决方案")]),t._v(" "),a("li",[t._v("Object.values()")]),t._v(" "),a("li",[t._v("Object.entries()")]),t._v(" "),a("li",[t._v("String padding：String.prototype.padStart、String.prototype.padEnd")]),t._v(" "),a("li",[t._v("函数参数列表结尾允许逗号")]),t._v(" "),a("li",[t._v("Object.getOwnPropertyDescriptors(): 获取一个对象的所有自身属性的描述符,如果没有任何自身属性，则返回空对象")]),t._v(" "),a("li",[t._v("SharedArrayBuffer 对象：用来表示一个通用的，固定长度的原始二进制数据缓冲区")]),t._v(" "),a("li",[t._v("Atomics 对象：提供了一组静态方法用来对 SharedArrayBuffer 对象进行原子操作")])]),t._v(" "),a("h4",{attrs:{id:"ecmascript-2016-es7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-2016-es7"}},[t._v("#")]),t._v(" ECMAScript 2016(ES7)")]),t._v(" "),a("ol",[a("li",[t._v("Array.prototype.includes()")]),t._v(" "),a("li",[t._v("指数操作符 **")])]),t._v(" "),a("h4",{attrs:{id:"ecmascript-2015-es6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-2015-es6"}},[t._v("#")]),t._v(" ECMAScript 2015(ES6)")]),t._v(" "),a("ol",[a("li",[t._v("let 和 const")]),t._v(" "),a("li",[t._v("类（class）")]),t._v(" "),a("li",[t._v("模块化(ES Module)")]),t._v(" "),a("li",[t._v("箭头（Arrow）函数")]),t._v(" "),a("li",[t._v("函数参数默认值")]),t._v(" "),a("li",[t._v("模板字符串")]),t._v(" "),a("li",[t._v("解构赋值")]),t._v(" "),a("li",[t._v("延展操作符 ...")]),t._v(" "),a("li",[t._v("对象属性简写")]),t._v(" "),a("li",[t._v("Promise")])]),t._v(" "),a("p",[t._v("查看详情 "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/427857918",target:"_blank",rel:"noopener noreferrer"}},[t._v("原作者地址"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"noprint-js-javascript-在-html-中禁用打印、截屏、复制和粘贴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noprint-js-javascript-在-html-中禁用打印、截屏、复制和粘贴"}},[t._v("#")]),t._v(" NoPrint.js--JavaScript 在 HTML 中禁用打印、截屏、复制和粘贴")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("用途")]),t._v(" "),a("p",[t._v("禁用复制和粘贴\n禁用打印\n禁用鼠标右键\n禁用截图\n禁用“另存为”/ Ctrl + S\n自动模糊")])]),t._v(" "),a("h3",{attrs:{id:"简单使用-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单使用-2"}},[t._v("#")]),t._v(" 简单使用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引入noprint.js cdn地址 https://pdfanticopy.com/noprint.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" noPrint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//noPrint将禁用 CTRL + P 快捷键和打印功能。即使浏览者尝试通过浏览器菜单或按钮打印网页，打印时内容也会变成空白页面。可以将noPrint设置为false以关闭打印保护。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" noCopy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//noCopy将禁用文本选择、鼠标右键、CTRL + S（保存网页）以及复制和粘贴功能。可以将noCopy设置为false以关闭此保护。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" noScreenshot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//noScreenshot将禁用PrintScreen键以防止访问者轻松截屏和获取网页快照。可以将 noScreenshot设置为false以关闭此功能。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" autoBlur "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一旦鼠标光标离开内容区域，autoBlur 会将网页上的所有内容变为模糊。浏览者可以通过单击网页来让内容变回清晰的样子。这可以防止人们通过第三方应用程序或 Opera工具栏上的快照功能截取屏幕截图。可以将autoBlur设置为false以禁用自动模糊")]),t._v("\n")])])]),a("p",[t._v("官网地址 "),a("a",{attrs:{href:"https://pdfanticopy.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("noprint.js"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"js-cookie-轻量级的处理-cookies-的-js-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-cookie-轻量级的处理-cookies-的-js-api"}},[t._v("#")]),t._v(" js-cookie 轻量级的处理 cookies 的 js API")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("用途")]),t._v(" "),a("p",[t._v("js-cookie 是一个简单的，轻量级的处理 cookies 的 js API。")])]),t._v(" "),a("p",[t._v("相关介绍 "),a("a",{attrs:{href:"https://blog.csdn.net/qq_20802379/article/details/81436634",target:"_blank",rel:"noopener noreferrer"}},[t._v("js-cookie"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"react-dnd-拖拽库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-dnd-拖拽库"}},[t._v("#")]),t._v(" react-dnd 拖拽库")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("用途")]),t._v(" "),a("p",[t._v("React DnD 是 React 和 Redux 的核心作者 Dan Abramov 创造的一组 React 高阶组件，可以在保持组件分离的前提下帮助构建复杂的拖放接口。")])]),t._v(" "),a("p",[t._v("相关介绍 "),a("a",{attrs:{href:"https://www.jianshu.com/p/8a1e16d5519b",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-dnd"),a("OutboundLink")],1),t._v("\ngithub "),a("a",{attrs:{href:"https://github.com/react-dnd/react-dnd/",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-dnd"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"velocity-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#velocity-js"}},[t._v("#")]),t._v(" Velocity.js")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("用途")]),t._v(" "),a("p",[t._v("Velocity 是一个简单易用、高性能、功能丰富的轻量级 JS 动画库。它能和 jQuery 完美协作，并和$.animate()有相同的 API， 但它不依赖 jQuery，可单独使用。 Velocity 不仅包含了 $.animate() 的全部功能， 还拥有：颜色动画、转换动画(transforms)、循环、 缓动、SVG 动画、和 滚动动画 等特色功能。")])]),t._v(" "),a("p",[t._v("中文文档 "),a("a",{attrs:{href:"http://shouce.jb51.net/velocity/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Velocity.js"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);